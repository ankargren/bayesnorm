// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "../inst/include/bayesnorm.h"
#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// rmvn_bcm
arma::mat rmvn_bcm(const arma::mat& Phi, const arma::vec& d, const arma::vec& alpha);
RcppExport SEXP _bayesnorm_rmvn_bcm(SEXP PhiSEXP, SEXP dSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type Phi(PhiSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type d(dSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(rmvn_bcm(Phi, d, alpha));
    return rcpp_result_gen;
END_RCPP
}
// rmvn_rue
arma::mat rmvn_rue(const arma::mat& Phi, const arma::vec& d, const arma::vec& alpha);
RcppExport SEXP _bayesnorm_rmvn_rue(SEXP PhiSEXP, SEXP dSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type Phi(PhiSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type d(dSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(rmvn_rue(Phi, d, alpha));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_bayesnorm_rmvn_bcm", (DL_FUNC) &_bayesnorm_rmvn_bcm, 3},
    {"_bayesnorm_rmvn_rue", (DL_FUNC) &_bayesnorm_rmvn_rue, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_bayesnorm(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
